package PS;

message FeatureGroupInfo {
  // group id
  optional int32 grp_id = 1;
  // total number of non-zero elements
  optional uint64 nnz_ele = 5;
  // total number of non-zero instance, (non-empty rows)
  optional uint64 nnz_ins = 6;
  optional uint64 fea_begin = 3 [default = 0xFFFFFFFFFFFFFFFF];
  optional uint64 fea_end = 4;
}

message InstanceInfo {
  // label type
  enum LabelType {
    // unsupvervised learning
    EMPTY = 1;
    // -1, 1
    BINARY = 2;
    // 0, 1, 2, ...
    MULTICLASS = 3;
    // regression
    CONTINUOUS = 4;
  }
  optional LabelType label_type = 1;
  // feature type
  enum FeatureType {
    DENSE = 1;
    SPARSE = 2;
    SPARSE_BINARY = 3;
  }
  optional FeatureType fea_type = 2;
  // all feature groups, the first one is the union of all rest groups
  repeated FeatureGroupInfo fea_grp = 3;
  // total number of instances
  optional uint64 num_ins = 4;
  // total number of non-zero elemenets
  optional uint64 nnz_ele = 5;
  optional uint64 fea_begin = 6 [default = 0xFFFFFFFFFFFFFFFF];
  optional uint64 fea_end = 7;

}

message FeatureGroup {
  // group id
  optional int32 grp_id = 1;
  // feature id
  repeated uint64 fea_id = 2 [packed=true];
  // feature value
  repeated float fea_val = 3 [packed=true];
}

// 1. dense data: fea_id is emtpy
// 2. sparse binary data: fea_val is emtpy
// 3. sparse real-value: the sizes of fea_id and fea_val are equal.
message Instance {
  // -1, 1 for binary classification, 0,1,2,... for multiclass classfication,
  // real value for regression, and empty for unsupverised learning
  optional float label = 1;
  // feature groups
  repeated FeatureGroup fea_grp = 2;
  // an unique id for this instance. one can add extra information, such as
  // time, into this id
  optional int64 ins_id = 3;
}
